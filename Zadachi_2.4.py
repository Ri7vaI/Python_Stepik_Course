#GC-состав является важной характеристикой геномных последовательностей и определяется как процентное соотношение суммы всех гуанинов и цитозинов к общему числу нуклеиновых оснований в геномной последовательности.
# Напишите программу, которая вычисляет процентное содержание символов G(гуанин) и C(цитозин) в введенной строке(программа не должна зависеть от регистра вводимых символов).
# Например, в строке "acggtgttat" процентное содержание символов G и C равно 410⋅100 = 40.0, где 4 - это количество символов G и C,  а 10 - это длина строки.

def f1():
    test = input()
    st = test.upper()
    q = 0
    sum = 0
    for i in st:
        if i == 'C' or i == 'G':
            q += 1
    sum = q/len(st)*100
    print(sum)
f1()

# #Узнав, что ДНК не является случайной строкой, только что поступившие в Институт биоинформатики студенты группы информатиков предложили использовать алгоритм сжатия, который сжимает повторяющиеся символы в строке.
# Кодирование осуществляется следующим образом:
# s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной строки заменяются на этот символ и количество его повторений в этой позиции строки.
# Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом и выводит закодированную последовательность на стандартный вывод. Кодирование должно учитывать регистр символов.

def f2():
    s = str(input())
    e = len(s) - 1
    q = 1
    t = ''
    if len(s) == 1:
        t = t + s + str(q)
    else:
        for i in range(0, e):
            if s[i] == s[i+1]:
                q += 1
            elif s[i] != s[i+1]:
                t += s[i] + str(q)
                q = 1
        for j in range(e, e+1):
            if s[-1] == s[-2]:
                t += s[j] + str(q)
                q += 1
            else:
                t += s[j] + str(q)
                q = 1
    print(t)
f2()